# Dockerfile for RAPID v2 ROS 2 Jazzy Environment
#
# This container provides ROS 2 Jazzy (Python 3.12) for planner, controller,
# and other ROS 2 nodes. It communicates with Isaac Sim (Python 3.11) on the
# host via DDS network protocol.
#
# Build: docker compose build
# Run: docker compose up

FROM osrf/ros:jazzy-desktop

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=jazzy
ENV RMW_IMPLEMENTATION=rmw_fastrtps_cpp

# Install additional ROS 2 packages and dependencies
RUN apt-get update && apt-get install -y \
    # Build tools
    build-essential \
    cmake \
    git \
    python3-pip \
    python3-colcon-common-extensions \
    # ROS 2 packages
    ros-${ROS_DISTRO}-rclpy \
    ros-${ROS_DISTRO}-sensor-msgs \
    ros-${ROS_DISTRO}-nav-msgs \
    ros-${ROS_DISTRO}-geometry-msgs \
    ros-${ROS_DISTRO}-tf2-msgs \
    ros-${ROS_DISTRO}-diagnostic-msgs \
    ros-${ROS_DISTRO}-rosgraph-msgs \
    ros-${ROS_DISTRO}-tf2-ros \
    ros-${ROS_DISTRO}-rviz2 \
    # DDS middleware
    ros-${ROS_DISTRO}-rmw-fastrtps-cpp \
    ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \
    # Development tools
    python3-pytest \
    python3-yaml \
    # Utilities
    nano \
    vim \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Python packages
RUN pip3 install --no-cache-dir \
    numpy \
    pyyaml \
    pytest

# Create workspace
WORKDIR /workspace

# Copy project source code (read-only for Phase 1)
COPY src /workspace/src
COPY config /workspace/config

# Source ROS 2 in bashrc
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /root/.bashrc

# Set up entrypoint
COPY docker/ros2_entrypoint.sh /ros2_entrypoint.sh
RUN chmod +x /ros2_entrypoint.sh

ENTRYPOINT ["/ros2_entrypoint.sh"]
CMD ["bash"]
